pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'hello-python-image'
        STAGING_ENV = 'staging'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout code from repository
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Run Docker Container in Staging') {
            steps {
                script {
                    // Run the container in staging environment
                    sh 'docker run --rm $DOCKER_IMAGE'
                }
            }
        }
        
       
        stage('Deploy to Staging') {
          steps {
            sshagent(['a6dcf089-9d60-48e8-a47f-9d46439ada5b']) {
               sh '''
               cat <<EOF
               ssh -o StrictHostKeyChecking=no ec2-user@3.110.55.207 <<EOF
               cd /home/ec2-user/jenkins_pipeline
               git pull origin main
               # Install dependencies (make sure to use a virtual environment)
               source venv/bin/activate
               pip install -r requirements.txt
               # Restart the application (Assuming you're using something like Gunicorn)
               pm2 restart all
               EOF
               '''
            }
          }
        }
           stage('Deploy to Production') {
            steps {
                sshPublisher(publishers: [
                    sshPublisherDesc(
                        configName: 'prod-ec2',
                        transfers: [
                            sshTransfer(
                                sourceFiles: '**',
                                removePrefix: '',
                                remoteDirectory: '/home/ec2-user/prod_app',
                                execCommand: '''
cd /home/ec2-user/prod_app
source venv/bin/activate
pip install -r requirements.txt
sudo systemctl restart testapp
'''
                            )
                        ],
                        usePromotionTimestamp: false,
                        verbose: true
                    )
                ])
            }
        }

    }

    post {
        always {
            // Clean up, remove any dangling images
            sh 'docker system prune -f'
        }
    }
}

